{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAeeA,EAbF,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,KAAKC,EAAa,EAAbA,MAAMC,EAAO,EAAPA,GAEtB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA2BF,EAA3B,YAAyCG,IAAI,UACrD,gCACI,6BAAKL,IACL,4BAAIC,WCWLK,EAjBE,SAAC,GAAa,IAAZC,EAAW,EAAXA,OAChB,OACK,8BAEIA,EAAOC,KAAI,SAACC,EAAKC,GACb,OAAS,cAAC,EAAD,CAELR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCOVC,EAdG,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,aAChB,OACI,qBAAKT,UAAU,MAAf,SACI,uBACAA,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCIPI,G,MAXA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKJ,EAAMK,aCkBJC,E,kDApBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAW,GAHD,E,qDAOlB,SAAkBC,EAAMC,GACpBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAI5B,WACI,OAAGG,KAAKJ,MAAMC,SACH,4EAEAG,KAAKX,MAAMK,a,GAjBHQ,aCoDZC,E,kDA9CX,aAAc,IAAD,8BACT,gBAcJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAdzC,EAAKZ,MAAM,CACPjB,OAAQ,GACR2B,YAAa,IAJR,E,qDASb,WAAoB,IAAD,OACfG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKZ,SAAS,CAACtB,OAAOkC,S,oBASvC,WACI,MAA8Bb,KAAKJ,MAA5BjB,EAAP,EAAOA,OAAQ2B,EAAf,EAAeA,YACTQ,EAAiBnC,EAAOoC,QAAO,SAAAC,GACjC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASZ,EAAYW,kBAGzD,OAAQtC,EAAOwC,OAGP,sBAAK5C,UAAU,KAAf,UACK,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWS,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUzB,OAAQmC,WAPnC,6C,GA7BMZ,aCKHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.eeb49f61.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({name,email,id}) =>{\n\n    return (\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img src= {`https://robohash.org/${id}?100x100`} alt=\"robot\"/>\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card'; \n\nconst CardList = ({robots}) =>{\n   return(\n        <div>\n        {\n            robots.map((user,i) =>{\n                return  (<Card \n                    key={i} \n                    id={robots[i].id} \n                    name={robots[i].name} \n                    email={robots[i].email}\n                    />);\n            })\n        }\n        </div>\n    );\n    }\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchChange}) =>{\n    return (\n        <div className='pa2'>\n            <input \n            className='pa3 ba b--green bg-lightest-blue'\n            type='search' \n            placeholder='search robots' \n            onChange={searchChange}\n            />\n        </div>\n    );\n\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) =>{\n    return (\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\n            {props.children}\n        </div>\n    );\n};\n\n\n\n\nexport default Scroll;","import React,{Component} from 'react';\n     \nclass ErrorBoundry extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            hasError : false\n        }\n    }\n\n    componentDidCatch(error,info){\n        this.setState({hasError:true})\n    }\n\n\n    render(){\n        if(this.state.hasError){\n            return <h1> Opps. There is a problem loading the page</h1>\n        } \n            return this.props.children\n    }\n}\n\nexport default ErrorBoundry;","import React, {Component} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport './App.css'\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\n\nclass App extends Component {\n    constructor(){\n        super()\n        this.state={\n            robots: [],\n            searchfield: ''\n        \n        }\n    }\n\n    componentDidMount(){ \n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response=>response.json())\n        .then(users=>this.setState({robots:users}))\n    }\n\n    onSearchChange = (event)=>{\n        this.setState({searchfield: event.target.value})\n        \n        \n    }\n\n    render(){\n        const {robots, searchfield} = this.state;\n        const filteredRobots = robots.filter(robot=>{\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n        })\n\n        return !robots.length ?\n            <h1>Loading</h1> :\n                (\n                <div className='tc'>\n                     <h1 className='f1'>Robo Friends</h1>\n                     <SearchBox searchChange={this.onSearchChange}/>\n                     <Scroll>\n                         <ErrorBoundry>\n                             <CardList robots={filteredRobots}/>\n                         </ErrorBoundry>\n                     </Scroll>\n          \n                 </div>\n             );\n        }\n    }\n\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}